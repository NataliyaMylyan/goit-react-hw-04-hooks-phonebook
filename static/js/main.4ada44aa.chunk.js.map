{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css","components/App/App.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","currentTarget","value","resetState","className","s","container","event","preventDefault","label","input","type","pattern","title","required","onChange","button","Filter","filter","ContactList","contacts","onClick","contactList","map","id","contact","App","setContacts","setFilter","localstorageKey","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","normalizedName","toLowerCase","find","alert","contactName","shortid","generate","prevState","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ada44aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__1INJV\",\"button\":\"ContactForm_button__1MLZK\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = ({ currentTarget: { name, value } }) => {\n    name === \"name\" ? setName(value) : setNumber(value);\n\n    // if (name === \"name\") setName(value);\n    // else if (name === \"number\") setNumber(value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit(name, number);\n    resetState();\n  };\n\n  const resetState = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.container} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ filter, onChange }) => (\n  <div className={s.filter}>\n    <label>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onClick }) => {\n  // const handleDeleteBtn = ({ target: { name } }) => {\n  //   onClick(name);\n  // };\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.contact} key={id}>\n          <p> {name}</p>\n          <p> {number}</p>\n\n          <button\n            className={s.button}\n            type=\"button\"\n            name={id}\n            onClick={() => onClick(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default ContactList;\n","import { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"../ContactForm/ContactForm.jsx\";\nimport Filter from \"../Filter/Filter.jsx\";\nimport ContactList from \"../ContactList/ContactList.jsx\";\nimport s from \"./App.module.css\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const localstorageKey = \"contacts\";\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem(localstorageKey));\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(localstorageKey, JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addNewContact = (name, number) => {\n    const normalizedName = name.toLowerCase();\n\n    const duplicateName = contacts.find(\n      (contact) => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (duplicateName) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    if (name === \"\") {\n      alert(`Please type your info in the field. It is empty.`);\n    } else {\n      const contactName = {\n        name: name,\n        number: number,\n        id: shortid.generate(),\n      };\n\n      setContacts((prevState) => [...prevState, contactName]);\n    }\n  };\n\n  const deleteContact = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  const filterContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const updateFilter = (event) => {\n    const { value } = event.currentTarget;\n    setFilter(value);\n  };\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={addNewContact} />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter filter={filter} onChange={updateFilter} />\n      <ContactList contacts={filterContacts()} onClick={deleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contact\":\"ContactList_contact__3ZIyH\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\"};"],"sourceRoot":""}